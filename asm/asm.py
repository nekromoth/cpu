#!/usr/bin/env python3
import sys

from enum import Enum

###############################################################################
R0 = 0x0
R1 = 0x1
R2 = 0x2
R3 = 0x3
R4 = 0x4
R5 = 0x5
R6 = 0x6
R7 = 0x7
XR = 0x8
FR = 0x9
SP = 0xA
SS = 0xB
IP = 0xC
IS = 0xD
RP = 0xE
RS = 0xF
###############################################################################
#								 COLOR LOGGING
###############################################################################
def title(msg):
    "print msg in bold white"
    print("\033[1;37m" + msg + "\033[0;37m")

def error(msg):
    "print msg in bold red"
    print("\033[1;31m" + msg + "\033[0;31m")

###############################################################################
#									 LEXER
###############################################################################
def lexer(raw_lines):
	"split the input *.asm (raw_lines) file into words (tokens)"
	for i in range(len(raw_lines):
		
	
###############################################################################
def parser():
	"make sence of the individual words the lexer provided"
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
def main():
	if len(sys.argv) == 1:
		error("! Provide file as argument.")
		exit()
	
	try:
		title("> Opening: [%s]" %sys.argv[1])
		with open(sys.argv[1], "r") as file:
			raw_lines = file.readlines()
		
	except FileNotFoundError:
		error("! File [%s] not found.", %sys.argv[1])
		exit()
	
	
	for i, line in enumerate(raw_lines):
		print("% 3d: %s" %(i + 1, line), end="")


###############################################################################
if __name__ == "__main__": main()
