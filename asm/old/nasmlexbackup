tokens = (
    "INSTRUCTION",
    "IDENTIFIER",
    "REGISTER",
    "INTEGER",
    "STRING",
    "ORIGIN",
    "LABEL",
    "CONST",
    "DATA"
)

t_INSTRUCTION =\
    r"mov|set|str|ld|psh|pop|add|sub|mul|div|cmp|and|or|xor|lsh|rsh"\
    r"hlt|jmp|jc|jnc|jv|jnv|je|jne|js|jns|ja|jna|jb|jnb|jg|jng|jl|jn"
t_IDENTIFIER  = r"[a-zA-Z_][a-zA-Z0-9_]+"
t_REGISTER    = r"r0|r1|r2|r3|r4|r5|r6|r7|XR|FR|SP|SS|IP|IS|RP|RS"
t_INTEGER     = r"0x[a-fA-F0-9]+|[-+]*[0-9]+|0b[01_]+"
t_STRING      = r"\"([^\\\n]|(\\.))*?\""
t_LABEL       = r"[a-zA-Z_][a-zA-Z0-9_]*:"
t_CONST       = r"%"
t_DATA        = r"\$"
t_ORIGIN      = r"@"

t_ignore = " [],\t"

def t_SEMICOLON(t):     # handle semicolons
    r":"
    pass

def t_COMMENT(t):       # handle comments
    r'\#.*'
    pass

def t_newline(t):       # handle newlines
    r"\n"
    t.lexer.lineno += len(t.value)

def t_error(t):
    print("\033[31;1mERROR%-10s line %d: '%s'" % ("", tok.lineno, t.value[0]))
    t.lexer.skip(1)
################################################################################

lexer = lex.lex()
lexer.input(data)

while True:
    tok = lexer.token()
    if not tok:
        break
    print("\033[37;1m%-16s\033[0m%s" %(tok.type, tok.value))
